@model DatabaseConnectie.Models.User

<h2>Create New User</h2>

@using (Html.BeginForm("Create", "User", FormMethod.Post, new { enctype = "multipart/form-data" }))
{
    @Html.AntiForgeryToken()

    @Html.ValidationSummary(true, "", new { @class = "text-danger" })

    <div class="form-group">
        @Html.LabelFor(model => model.username)
        @Html.EditorFor(model => model.username, new { htmlAttributes = new { @class = "form-control" } })
        @Html.ValidationMessageFor(model => model.username, "", new { @class = "text-danger" })
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.email)
        @Html.EditorFor(model => model.email, new { htmlAttributes = new { @class = "form-control" } })
        @Html.ValidationMessageFor(model => model.email, "", new { @class = "text-danger" })
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.password)
        @Html.EditorFor(model => model.password, new { htmlAttributes = new { @class = "form-control" } })
        @Html.ValidationMessageFor(model => model.password, "", new { @class = "text-danger" })
    </div>

    <div class="form-group">
        @Html.Label("Profile Picture")
        <input type="file" name="profilePicture" id="profilePicture" onchange="loadFile(event)" />
        <img id="preview" width="200" />
    </div>

    <script>
        var loadFile = function (event) {
            var output = document.getElementById('preview');
            output.src = URL.createObjectURL(event.target.files[0]);
            output.onload = function () {
                URL.revokeObjectURL(output.src) // free memory
            }
        };
    </script>

    <button type="submit" class="btn btn-primary">Create</button>
}